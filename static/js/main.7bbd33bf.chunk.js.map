{"version":3,"sources":["loop.mp4","logoWhite.png","Landing.js","Navbar.js","Video1.js","Video2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Landing","react_default","a","createElement","className","id","src","logoWhite","alt","autoPlay","loop","muted","loopVideo","type","Component","Navbar","window","onscroll","document","body","scrollTop","documentElement","getElementById","Video1","state","playing","mediaStart","hoverOn","_this","readytoPlay","setState","MouseOver","hoverOff","onPause","console","log","onStart","setTimeout","this","ReactPlayer_default","url","onMouseEnter","onMouseLeave","width","height","preload","App","src_Navbar","src_Landing","src_Video1","Video2","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7bbd33bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loop.696bc775.mp4\";","module.exports = __webpack_public_path__ + \"static/media/logoWhite.15bb0261.png\";","import React, { Component } from 'react';\nimport './App.css';\nimport loopVideo from './loop.mp4';\nimport logoWhite from './logoWhite.png'\n\n\n\nclass Landing extends Component {\n\n\n\n\n  render() {\n\n    return (\n<div className=\"landing\">\n<img className=\"logoWhite\" id=\"logoW2\" src={logoWhite} alt={\"logo\"} />\n<div><video className='introVideo' autoPlay loop muted>\n                    <source src={loopVideo} type='video/mp4' />\n                </video></div>\n                <p className=\"titrePortfolio\">No√© Provost Portfolio</p>\n\n</div>\n    \n\n        \n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport './App.css';\n\n\n\n\n\nclass Navbar extends Component {\n\n\n\n  render() {\n    window.onscroll = function () {\n\n        if (document.body.scrollTop >= 800 || document.documentElement.scrollTop > 800 ) {\n            document.getElementById(\"nav\").className=\"nav\"\n         \n        }\n        else  {\n            document.getElementById(\"nav\").className=\"hiden\"\n         \n        }\n    };\n    return (\n\n\n<div id='nav' className=\"hiden\">\n<p className='plusNav'>+</p>\n</div>\n    \n\n        \n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactPlayer from \"react-player\";\n\nclass Video1 extends Component {\n  state = {\n    playing: true,\n    mediaStart: false\n    \n  };\n\n\n  hoverOn = () => {\n    if (this.state.readytoPlay === true ) {\n    this.setState({ playing: true ,\n      MouseOver: true\n    })\n  }\n  document.getElementById(\"video1\").className = \"mouseHover\";\n  }\n  \n  \n  hoverOff = () => {\n    this.setState({MouseOver:false})\n    if (this.state.readytoPlay === true) {\n    \n      this.setState({ playing: false })\n    }\n    document.getElementById(\"video1\").className = \"mouseNotHover\"\n\n  }\n\n\n  onPause = () => {\n    if(this.state.MouseOver === true) {\nconsole.log(\"ouvir page\")\n\n    }\n    this.setState({ playing: false })\n\n  }\n\n\n  readytoPlay = () => {\n    this.setState({ playing: false,\n                    readytoPlay: true })\n  }\n\n  onStart = () => {\n    this.setState({ mediaStart: true })\n    setTimeout(this.readytoPlay, 300);\n  }\n  render() {\n    const { playing } = this.state;\n    return (\n      <div className=\"colorBackground\">\n        <div id=\"video1\" className=\"mouseNotHover\">\n          <ReactPlayer\n            url=\"https://player.vimeo.com/video/148894857?api=1&background=1&mute=0\"\n            playing={playing}\n            onPause={this.onPause}\n            onMouseEnter={this.hoverOn}\n            onMouseLeave={this.hoverOff}\n            onStart={this.onStart}\n            width=\"57vw\"\n            height=\"32vw\"\n            preload='true'\n            \n          />\n         </div>\n      </div>\n    );\n  }\n}\n\nexport default Video1;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactPlayer from \"react-player\";\n\nclass Video1 extends Component {\n  state = {\n    playing: false,\n    mediaStart: false\n    \n  };\n\n\n  hoverOn = url => {\n    this.setState({ playing: true ,\n      MouseOver: true\n    })\n  \n  document.getElementById(\"video2\").className = \"mouseHover\";\n  }\n  \n  \n  hoverOff = url => {\n    this.setState({MouseOver:false})\n    if (this.state.mediaStart === false ) {\n     setTimeout(this.hoverOff,50)\n    }\n  \n  else{\n    this.setState({ playing: false })\n    document.getElementById(\"video2\").className = \"mouseNotHover\"\n  }\n  }\n\n\n  onPause = () => {\n    if(this.state.MouseOver === true) {\nconsole.log(\"ouvir page\")\n\n    }\n    this.setState({ playing: false })\n\n  }\n\n\n  onStart = () => {\n\n    this.setState({ mediaStart: true })\n\n\n\n  }\n  render() {\n    const { playing } = this.state;\n    return (\n      <div className=\"colorBackground\">\n        <div id=\"video2\" className=\"mouseNotHover\">\n          <ReactPlayer\n            url=\"https://www.dailymotion.com/video/x74yjih\"\n            playing={playing}\n            onPause={this.onPause}\n            onMouseEnter={this.hoverOn}\n            onMouseLeave={this.hoverOff}\n            onStart={this.onStart}\n            width=\"57vw\"\n            height=\"32vw\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Video1;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Landing from './Landing.js'\nimport Navbar from './Navbar.js'\nimport Video1 from './Video1.js'\nimport Video2 from './Video2.js'\n\n\n\n\nclass App extends Component {\n\n\n\n\n  render() {\n\n    return (\n\n\n<div>\n\n<Navbar />\n<Landing /> \n\n<div className=\"container-video\"> <Video1 /> </div>\n\n<div className=\"container-video\">  <Video2/></div>\n\n</div>\n    \n\n        \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}